<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@2.31">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>admin</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@2.12">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@2.62">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
    <hudson.plugins.git.util.BuildData plugin="git@3.9.1">
      <buildsByBranchName>
        <entry>
          <string>refs/remotes/origin/master</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@2.7.6">
              <sha1>fe3298f6716b063bc7d06a4f606f16b033626bdc</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/master</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>61</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>https://github.com/iamvijayaragavan/sample-java.git</string>
      </remoteUrls>
    </hudson.plugins.git.util.BuildData>
    <hudson.plugins.git.GitTagAction plugin="git@3.9.1">
      <tags class="hudson.util.CopyOnWriteMap$Tree">
        <entry>
          <string>refs/remotes/origin/master</string>
          <list/>
        </entry>
      </tags>
      <ws>/var/jenkins_home/workspace/Sample-maven</ws>
    </hudson.plugins.git.GitTagAction>
    <org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState plugin="workflow-scm-step@2.7">
      <revisionStates>
        <entry>
          <string>git https://github.com/iamvijayaragavan/sample-java.git</string>
          <hudson.scm.SCMRevisionState_-None/>
        </entry>
      </revisionStates>
    </org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState>
  </actions>
  <queueId>143</queueId>
  <timestamp>1548643197913</timestamp>
  <startTime>1548643197925</startTime>
  <result>SUCCESS</result>
  <duration>118584</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>SUCCESS</result>
    <script>#!/usr/bin/env groovy

import hudson.model.*
import hudson.EnvVars
import groovy.json.JsonSlurperClassic
import groovy.json.JsonBuilder
import groovy.json.JsonOutput
import java.net.URL
import org.jenkinsci.plugins.gitclient.Git;
import org.jenkinsci.plugins.gitclient.GitClient;
 
try {
node {
 stage(&apos;Pre-Requirestion&apos;){
  properties([[$class: &apos;BuildDiscarderProperty&apos;,strategy: [$class: &apos;LogRotator&apos;, numToKeepStr: &apos;5&apos;]],disableConcurrentBuilds(),])
  echo(&quot;All environments=${env}&quot;)
  echo(&quot;\u2600 BUILD_URL=${env.BUILD_URL}&quot;)
  def workspace = pwd()
  echo(&quot;\u2600 workspace=${workspace}&quot;)
  mailnotification = &quot;iamvj@gmail.com&quot;
  javaversion = &apos;JDK-1.8&apos;
  echo(&quot;\u2600 Java version=${javaversion}&quot;)
  branchname = &quot;${env.BRANCH_NAME}&quot;
  echo(&quot;\u2600 Branch Name=${branchname}&quot;)
  sh (&quot;git config --global user.email &apos;some@email.com&apos;&quot;)
  sh (&quot;git config --global user.name &apos;jenkins&apos;&quot;)
  def url = sh(returnStdout: true, script: &apos;git config remote.origin.url&apos;).trim()
  echo(&quot;url = ${url}&quot;)
  def mvnHome = tool &apos;M3&apos;
  def javahome = tool &apos;openjdk&apos;
 }
 stage(&apos;Checkout&apos;){
  echo &quot;Git Checkout&quot;
  checkout scm
 }
 stage(&apos;Build&apos;){
  def mvnHome = tool &apos;M3&apos;
  def javahome = tool &apos;openjdk&apos;
  sh(&quot;${mvnHome}/bin/mvn -B -Dmaven.test.failure.ignore verify&quot;)
  }
 stage(&apos;SonarQube Ananlyis&apos;){
  echo &quot;Hi Sonar&quot;
  withSonarQubeEnv(&apos;sonar&apos;){
   def mvnHome = tool &apos;M3&apos;
   sh(&quot;${mvnHome}/bin/mvn sonar:sonar&quot;)
  }
 }
 stage(&apos;Docker Build&apos;){
  def mvnHome = tool &apos;M3&apos;
  sh(&quot;${mvnHome}/bin/mvn package&quot;)
 }
 stage(&apos;Publish Image&apos;){
  echo &quot;Welclome Hub&quot;
 }
} // node
 
} // try end
catch (exc) {
/*
 err = caughtError
 currentBuild.result = &quot;FAILURE&quot;
 String recipient = &apos;infra@lists.jenkins-ci.org&apos;
 mail subject: &quot;${env.JOB_NAME} (${env.BUILD_NUMBER}) failed&quot;,
         body: &quot;It appears that ${env.BUILD_URL} is failing, somebody should do something about that&quot;,
           to: recipient,
      replyTo: recipient,
 from: &apos;noreply@ci.jenkins.io&apos;
*/
} finally {
  
 (currentBuild.result != &quot;ABORTED&quot;) &amp;&amp; node(&quot;master&quot;) {
     // Send e-mail notifications for failed or unstable builds.
     // currentBuild.result must be non-null for this step to work.
     //step([$class: &apos;Mailer&apos;,
     //   notifyEveryUnstableBuild: true,
     //   recipients: &quot;${email_to}&quot;,
     //   sendToIndividuals: true])
 }
}
</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>351310770</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>1195545218</long>
      </entry>
      <entry>
        <string>run</string>
        <long>6189174451</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>850276691</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>4505151466</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>41</iota>
    <head>1:41</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList">
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@3.9.1">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>https://github.com/iamvijayaragavan/sample-java.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>*/master</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="list"/>
        <extensions/>
      </scm>
      <node></node>
      <workspace>/var/jenkins_home/workspace/Sample-maven</workspace>
      <changelogFile>/var/jenkins_home/jobs/Sample-maven/builds/61/changelog0.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
  </checkouts>
</flow-build>